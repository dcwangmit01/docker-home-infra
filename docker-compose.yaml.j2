version: "3"

services:
  dyndns:
    image: bshaw/route53-dyndns
    environment:
      AWS_ACCESS_KEY_ID: {{ dyndns.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: {{ dyndns.AWS_SECRET_ACCESS_KEY }}
      AWS_CONNECTION_REGION: {{ dyndns.AWS_CONNECTION_REGION }}
      ROUTE53_DOMAIN_A_RECORD: {{ dyndns.ROUTE53_DOMAIN_A_RECORD }}
      ROUTE53_UPDATE_FREQUENCY: 3600
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /kdk-home-infra/docker/nginx/web:/var/www
      - /kdk-home-infra/conf/nginx_sites.conf:/etc/nginx/conf.d/default.conf:ro
      - /kdk-home-infra/conf/htpasswd:/etc/nginx/htpasswd:ro
      - /kdk-home-infra/docker/letsencrypt/etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      wp:
      caliwp:
      fax:
      registry:
  wp:
    image: wordpress:latest
    volumes:
    - /kdk-home-infra/docker/wp/var/www/html:/var/www/html
    - /kdk-home-infra/conf/wordpress_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    networks:
      wp:
  wpdb:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: {{ wpdb.MYSQL_ROOT_PASSWORD }}
    volumes:
      - /kdk-home-infra/docker/wpdb/var/lib/mysql:/var/lib/mysql
    networks:
      wp:
        aliases:
        - mysql
  caliwp:
    image: wordpress:latest
    volumes:
    - /kdk-home-infra/docker/caliwp/var/www/html:/var/www/html
    - /kdk-home-infra/conf/wordpress_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    networks:
      caliwp:
  caliwpdb:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: {{ caliwpdb.MYSQL_ROOT_PASSWORD }}
    volumes:
      - /kdk-home-infra/docker/caliwpdb/var/lib/mysql:/var/lib/mysql
    networks:
      caliwp:
        aliases:
        - mysql
  # To replace with gogs
  git:
    image: rastasheep/ubuntu-sshd
    ports:
      - "2222:22"
    command: bash -c "apt-get update; apt-get install -y git; rm -f /etc/ssh/ssh_host_*; dpkg-reconfigure openssh-server; useradd git -m -G root -s /bin/bash -p '*'; mkdir -p /home/git/.ssh; cp /tmp/authorized_keys /home/git/.ssh/authorized_keys; chown -R git:git /home/git; echo 'git ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/git; /usr/sbin/sshd -D"
    volumes:
      - /kdk-home-infra/docker/git/home/git:/home/git
      - /kdk-home-infra/conf/authorized_keys:/tmp/authorized_keys:ro
  aptcacherng:
    image: minimum2scp/apt-cacher-ng
    ports:
      - "3142:3142"
  # environment:
  #    - ACNG_BACKENDS_DEBIAN=http://mirrors.us.kernel.org/debian/
  #    - ACNG_BACKENDS_UBUNTU=http://mirrors.us.kernel.org/ubuntu/
  #  volumes:
  #    - /kdk-home-infra/docker/aptcacherng/var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng
  registry: # docker registry
    image: registry:2
    volumes:
    - /kdk-home-infra/docker/registry/var/lib/registry:/var/lib/registry
    networks:
      registry:
  vaporfax:
    image: bludesign/faxserver:latest
    volumes:
    - /kdk-home-infra/docker/vaporfax/FaxServer/Public:/FaxServer/Public
    environment:
    - MONGO_HOST=mongofax
    - MONGO_PORT=27017
    - VAPOR_HOST=0.0.0.0
    networks:
      fax:
    entrypoint:
    - bash
    - -c
    - while true; do sleep 10; date; echo Alive; done
  mongofax:
    image: mongo:4
    volumes:
    - /kdk-home-infra/docker/mongofax/data/configdb:/data/configdb
    - /kdk-home-infra/docker/mongofax/data/db:/data/db
    networks:
      fax:
networks:
  fax:
  wp:
  caliwp:
  registry:

#####################################################################
# Notes

# plex:
#   # https://github.com/timhaak/docker-plex
#   image: timhaak/plex
#   ports:
#     - 32400:32400
#   volumes:
#     - /kdk-home-infra/docker/plex/config:/config
#     - /autofs/media:/media
#
#   # After creation:
#   # sudo emacs /kdk-home-infra/docker/plex/config/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml
#   # Add:  allowedNetworks="192.168.3.0/255.255.255.0"


# restart only apt-cache and connect with bash
# export ID=`docker ps|grep apt-cacher |awk '{print $1}'`; docker stop $ID; docker rm $ID; make config; docker-compose up -d; sleep 1; export ID=`docker ps|grep apt-cacher |awk '{print $1}'`; docker exec -it $ID bash

