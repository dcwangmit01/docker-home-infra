version: "3"

services:

  nginx:
    container_name: nginx
    image: nginx:alpine
    networks:
      - home-infra-net
    volumes:
      - ./conf/nginx/htpasswd:/etc/nginx/htpasswd:ro
      - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
      - ./volumes/nginx/web:/var/www
    ports:
      - 80:80
      - 443:443
    restart: always
    command: /bin/sh -c "while :; do sleep 24h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"
    depends_on:
      - hackmd-o2p
      - plantuml-o2p

  certbot:
    container_name: certbot
    image: certbot/certbot
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot --webroot-path /var/www/certbot; sleep 12h & wait $${!}; done;"
    networks:
      - home-infra-net
    volumes:
      - ./volumes/certbot/conf:/etc/letsencrypt
      - ./volumes/certbot/www:/var/www/certbot
    restart: always
    depends_on:
      - nginx

  hackmd-o2p:
    container_name: hackmd-o2p
    image: quay.io/oauth2-proxy/oauth2-proxy
    networks:
      - home-infra-net
    # port is 4180
    environment:
    {%- for k,v in oauth2proxy.hackmd.items() %}
      - {{k}}={{v}}
    {%- endfor %}
    restart: always
    depends_on:
      - nginx-hackmd-plantuml

  nginx-hackmd-plantuml:
    container_name: nginx-hackmd-plantuml
    image: nginx:alpine
    networks:
      - home-infra-net
    volumes:
      - ./conf/nginx-hackmd-plantuml/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/nginx-hackmd-plantuml/sites-enabled:/etc/nginx/sites-enabled:ro
   # port is 80
    restart: always
    depends_on:
      - hackmd
      - plantuml

  hackmd:
    container_name: hackmd
    image: hackmdio/hackmd:2.3.2
    networks:
      - home-infra-net
    environment:
      - CMD_DOMAIN=hackmd.{{ nginx.domain }}
      - CMD_PROTOCOL_USESSL=true
      # CMD_ALLOW_ANONYMOUS settings do not work, thus further protect with oauth2proxy
      - CMD_ALLOW_ANONYMOUS=false
      - CMD_ALLOW_ANONYMOUS_EDITS=false
      - CMD_ALLOW_ANONYMOUS_VIEWS=false
      - CMD_DB_URL=postgres://{{hackmd_postgres.POSTGRES_USER}}:{{hackmd_postgres.POSTGRES_PASSWORD}}@hackmd-postgres/{{hackmd_postgres.POSTGRES_DB}}
      - CMD_USECDN=false
      - CMD_PLANTUML_SERVER=https://hackmd.{{ nginx.domain }}
    {%- for k,v in hackmd.items() %}
      - {{k}}={{v}}
    {%- endfor %}
    # port is 3000
    volumes:
      - ./volumes/hackmd/uploads:/home/hackmd/app/public/uploads
    restart: always
    depends_on:
      - hackmd-postgres

  hackmd-postgres:
    container_name: hackmd-postgres
    image: postgres:11.6-alpine
    networks:
      - home-infra-net
    environment:
    {%- for k,v in hackmd_postgres.items() %}
      - {{k}}={{v}}
    {%- endfor %}
    volumes:
      - ./volumes/hackmd-postgres:/var/lib/postgresql/data
    restart: always

  plantuml-o2p:
    container_name: plantuml-o2p
    image: quay.io/oauth2-proxy/oauth2-proxy
    networks:
      - home-infra-net
    # port is 4180
    environment:
    {%- for k,v in oauth2proxy.plantuml.items() %}
      - {{k}}={{v}}
    {%- endfor %}
    restart: always
    depends_on:
      - plantuml

  plantuml:
    container_name: plantuml
    image: plantuml/plantuml-server:jetty
    networks:
      - home-infra-net
    # port is 8080
    restart: always

  # ubuntu:
  #   container_name: ubuntu
  #   image: ubuntu:latest
  #   networks:
  #     - home-infra-net
  #   entrypoint: /bin/sh -c "while true; do date; sleep 600; done;"

networks:
  home-infra-net:
