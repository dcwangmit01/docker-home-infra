## redirect http to https for all hosts
server {
    listen       80;

    location /.well-known { # for letsencrypt
        default_type "text/plain";
        alias /var/www/.well-known;
    }
    location / {
        return       301 https://$host$request_uri;
    }
}


## serve https://s.domain.com
server {
    listen       443 ssl http2;
    server_name s.{{ nginx.domains.davidwang.name }};
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate    {{ nginx.ssl.pem }};
    ssl_certificate_key    {{ nginx.ssl.key }};
    autoindex off;

    location / {
        root /var/www;
        index index.html;
    }
}

## serve https://whatismyip.domain.com
server {
    listen       443 ssl http2;
    server_name  whatismyip.{{ nginx.domains.davidwang.name }};

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate    {{ nginx.ssl.pem }};
    ssl_certificate_key    {{ nginx.ssl.key }};
    autoindex off;

    location / {
        return 200 "ip: $remote_addr";
        add_header Content-Type text/plain;
        add_header Access-Control-Allow-Origin *;
    }
}

## serve https://hackmd.domain.com
### Rate limit the below
server {
    listen       443 ssl http2;
    server_name  hackmd.{{ nginx.domains.davidwang.name }};

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate    {{ nginx.ssl.pem }};
    ssl_certificate_key    {{ nginx.ssl.key }};

    client_max_body_size 32m;  # For uploads, themes, etc

    location / {
        proxy_pass http://hackmd:8080;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        auth_basic "Authentication Required";
        auth_basic_user_file /etc/nginx/htpasswd;
    }
}

#####################################################################
# If serving base domain

# ## redirect https://domain.com to https://www.domain.com
# server {
#     listen       443 ssl http2;
#     server_name  {{ nginx.domains.davidwang.name }};
#
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#     ssl_certificate    {{ nginx.ssl.pem }};
#     ssl_certificate_key    {{ nginx.ssl.key }};
#
#     location /.well-known { # for letsencrypt, NOT SURE IF THIS SECTION NEEDED
#         default_type "text/plain";
#         alias /var/www/.well-known;
#     }
#     location / {
#         return       301 https://www.{{ nginx.domains.davidwang.name }}$request_uri;
#     }
# }
#
# ## serve https://www.domain.com
# ### Rate limit the below
# limit_req_zone  $binary_remote_addr  zone=domain:10m   rate=5r/m;
# server {
#     listen       443 ssl http2;
#     server_name  www.{{ nginx.domains.davidwang.name }};
#
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#     ssl_certificate    {{ nginx.ssl.pem }};
#     ssl_certificate_key    {{ nginx.ssl.key }};
#
#     client_max_body_size 32m;  # For uploads, themes, etc
#
#     location / {
#         proxy_pass http://wp:80;
#         proxy_set_header        Host            $host;
#         proxy_set_header        X-Real-IP       $remote_addr;
#         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
#     location ~* wp\-login\.php {
#          limit_req   zone=domain  burst=1 nodelay;
#          proxy_pass http://wp:80;
#          proxy_set_header        Host            $host;
#          proxy_set_header        X-Real-IP       $remote_addr;
#          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }
